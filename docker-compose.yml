services:
  db:
    image: postgres:17
    container_name: db
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD-SHELL', 'rabbitmq-diagnostics -q ping']
      interval: 10s
      timeout: 5s
      retries: 12

  migrate:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    image: stagecodes/otr-web:${DEPLOY_TAG:-local}
    profiles:
      - migrate
    restart: 'no'
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL}
      NEXT_PUBLIC_APP_BASE_URL: ${NEXT_PUBLIC_APP_BASE_URL}
      WEB_OSU_CLIENT_ID: ${WEB_OSU_CLIENT_ID}
      WEB_OSU_CLIENT_SECRET: ${WEB_OSU_CLIENT_SECRET}
      RABBITMQ_AMQP_URL: ${RABBITMQ_AMQP_URL}
      DATA_WORKER_OSU_CLIENT_ID: ${DATA_WORKER_OSU_CLIENT_ID}
      DATA_WORKER_OSU_CLIENT_SECRET: ${DATA_WORKER_OSU_CLIENT_SECRET}
      OSU_API_RATE_LIMIT_REQUESTS: ${OSU_API_RATE_LIMIT_REQUESTS}
      OSU_API_RATE_LIMIT_WINDOW_SECONDS: ${OSU_API_RATE_LIMIT_WINDOW_SECONDS}
      OSUTRACK_API_RATE_LIMIT_REQUESTS: ${OSUTRACK_API_RATE_LIMIT_REQUESTS}
      OSUTRACK_API_RATE_LIMIT_WINDOW_SECONDS: ${OSUTRACK_API_RATE_LIMIT_WINDOW_SECONDS}
      PLAYER_OSU_AUTO_REFETCH_ENABLED: ${PLAYER_OSU_AUTO_REFETCH_ENABLED}
      PLAYER_OSU_REFETCH_INTERVAL_MINUTES: ${PLAYER_OSU_REFETCH_INTERVAL_MINUTES}
      PLAYER_OSU_REFETCH_OUTDATED_DAYS: ${PLAYER_OSU_REFETCH_OUTDATED_DAYS}
      PLAYER_OSUTRACK_AUTO_REFETCH_ENABLED: ${PLAYER_OSUTRACK_AUTO_REFETCH_ENABLED}
      PLAYER_OSUTRACK_REFETCH_INTERVAL_MINUTES: ${PLAYER_OSUTRACK_REFETCH_INTERVAL_MINUTES}
      PLAYER_OSUTRACK_REFETCH_OUTDATED_DAYS: ${PLAYER_OSUTRACK_REFETCH_OUTDATED_DAYS}
    command: ['./scripts/run-migrations.sh']

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    image: stagecodes/otr-web:${DEPLOY_TAG:-local}
    restart: unless-stopped
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL}
      NEXT_PUBLIC_APP_BASE_URL: ${NEXT_PUBLIC_APP_BASE_URL}
      WEB_OSU_CLIENT_ID: ${WEB_OSU_CLIENT_ID}
      WEB_OSU_CLIENT_SECRET: ${WEB_OSU_CLIENT_SECRET}
      RABBITMQ_AMQP_URL: ${RABBITMQ_AMQP_URL}
      DATA_WORKER_OSU_CLIENT_ID: ${DATA_WORKER_OSU_CLIENT_ID}
      DATA_WORKER_OSU_CLIENT_SECRET: ${DATA_WORKER_OSU_CLIENT_SECRET}
      OSU_API_RATE_LIMIT_REQUESTS: ${OSU_API_RATE_LIMIT_REQUESTS}
      OSU_API_RATE_LIMIT_WINDOW_SECONDS: ${OSU_API_RATE_LIMIT_WINDOW_SECONDS}
      OSUTRACK_API_RATE_LIMIT_REQUESTS: ${OSUTRACK_API_RATE_LIMIT_REQUESTS}
      OSUTRACK_API_RATE_LIMIT_WINDOW_SECONDS: ${OSUTRACK_API_RATE_LIMIT_WINDOW_SECONDS}

  data-worker:
    build:
      context: .
      dockerfile: apps/data-worker/Dockerfile
    image: stagecodes/otr-data-worker:${DEPLOY_TAG:-local}
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      RABBITMQ_AMQP_URL: ${RABBITMQ_AMQP_URL}
      DATA_WORKER_OSU_CLIENT_ID: ${DATA_WORKER_OSU_CLIENT_ID}
      DATA_WORKER_OSU_CLIENT_SECRET: ${DATA_WORKER_OSU_CLIENT_SECRET}
      OSU_API_RATE_LIMIT_REQUESTS: ${OSU_API_RATE_LIMIT_REQUESTS}
      OSU_API_RATE_LIMIT_WINDOW_SECONDS: ${OSU_API_RATE_LIMIT_WINDOW_SECONDS}
      OSUTRACK_API_RATE_LIMIT_REQUESTS: ${OSUTRACK_API_RATE_LIMIT_REQUESTS}
      OSUTRACK_API_RATE_LIMIT_WINDOW_SECONDS: ${OSUTRACK_API_RATE_LIMIT_WINDOW_SECONDS}

volumes:
  postgres-data:
  rabbitmq-data:
