name: Deployment trigger

on:
  push:
    branches:
      - master
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'Staging'
        type: choice
        options:
          - Staging
          - Production
      tag:
        description: 'Docker image tag to deploy (required for manual production deploys)'
        required: false

jobs:
  determine:
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.resolve.outputs.target }}
      deploy_tag: ${{ steps.resolve.outputs.deploy_tag }}
    steps:
      - name: Resolve deployment context
        id: resolve
        shell: bash
        run: |
          set -euo pipefail

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            target="${{ github.event.inputs.environment }}"
            tag_input="${{ github.event.inputs.tag }}"
            if [[ "$target" == "Production" ]]; then
              if [[ -z "$tag_input" ]]; then
                echo "Manual production deployments require the 'tag' input." >&2
                exit 1
              fi
              resolved_tag="$tag_input"
            else
              resolved_tag="staging-latest"
            fi

            echo "target=$target" >> "$GITHUB_OUTPUT"
            echo "deploy_tag=$resolved_tag" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "target=Staging" >> "$GITHUB_OUTPUT"
            echo "deploy_tag=staging-latest" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[ "${{ github.event_name }}" == "release" && "${{ github.event.release.tag_name }}" != "" ]]; then
            echo "target=Production" >> "$GITHUB_OUTPUT"
            echo "deploy_tag=${{ github.event.release.tag_name }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "target=none" >> "$GITHUB_OUTPUT"
          echo "deploy_tag=none" >> "$GITHUB_OUTPUT"

  deploy:
    needs: determine
    if: needs.determine.outputs.target != 'none'
    uses: ./.github/workflows/deploy.yml
    with:
      target: ${{ needs.determine.outputs.target }}
      deploy_tag: ${{ needs.determine.outputs.deploy_tag }}
    secrets: inherit
